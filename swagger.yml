swagger: "2.0"
info:
  description: "TODO"
  version: "0.0.1"
  title: "Hypermedia API - example for Devoxx"
  contact:
    email: "antoine.cheron@fabernovel.com"
host: "localhost"
tags:
- name: "products"
  description: "Operations about products"
schemes:
- "http"
paths:
  /products:
    get:
      tags:
      - "products"
      summary: "Read the list of products"
      description: ""
      operationId: "readProducts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"
    post:
      tags:
      - "products"
      summary: "Add a new product to the list"
      description: ""
      operationId: "addProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Product object that needs to be added to the list"
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        400:
          description: "Invalid input"
        403:
          description: "A product with the same id already exists"
  /products/{id}:
    get:
      tags:
      - "products"
      summary: "Finds Product by id"
      description: ""
      operationId: "findProductById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the product"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            items:
              $ref: "#/definitions/Product"
        404:
          description: "Resource not found"
    post:
      tags:
      - "products"
      summary: "Update the information of the product with the given id"
      description: ""
      operationId: "updateProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the product"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Product object that needs to be added to the list"
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        400:
          description: "Invalid input"
        404:
          description: "Resource not found"
    delete:
      tags:
      - "products"
      summary: "Deletes a product"
      description: ""
      operationId: "deleteProduct"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the product"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Resource not found"
definitions:
  Product:
    type: "object"
    properties:
      id:
        type: "string"
      title:
        type: "string"
      price:
        type: "number"
        format: "double"